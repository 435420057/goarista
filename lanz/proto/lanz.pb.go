// Code generated by protoc-gen-go.
// source: lanz.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	lanz.proto

It has these top-level messages:
	ConfigRecord
	GlobalBufferUsageRecord
	CongestionRecord
	ErrorRecord
	LanzRecord
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type GlobalBufferUsageRecord_EntryType int32

const (
	GlobalBufferUsageRecord_LOW    GlobalBufferUsageRecord_EntryType = 1
	GlobalBufferUsageRecord_UPDATE GlobalBufferUsageRecord_EntryType = 2
	GlobalBufferUsageRecord_HIGH   GlobalBufferUsageRecord_EntryType = 3
)

var GlobalBufferUsageRecord_EntryType_name = map[int32]string{
	1: "LOW",
	2: "UPDATE",
	3: "HIGH",
}
var GlobalBufferUsageRecord_EntryType_value = map[string]int32{
	"LOW":    1,
	"UPDATE": 2,
	"HIGH":   3,
}

func (x GlobalBufferUsageRecord_EntryType) Enum() *GlobalBufferUsageRecord_EntryType {
	p := new(GlobalBufferUsageRecord_EntryType)
	*p = x
	return p
}
func (x GlobalBufferUsageRecord_EntryType) String() string {
	return proto1.EnumName(GlobalBufferUsageRecord_EntryType_name, int32(x))
}
func (x *GlobalBufferUsageRecord_EntryType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(GlobalBufferUsageRecord_EntryType_value, data, "GlobalBufferUsageRecord_EntryType")
	if err != nil {
		return err
	}
	*x = GlobalBufferUsageRecord_EntryType(value)
	return nil
}
func (GlobalBufferUsageRecord_EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type CongestionRecord_EntryType int32

const (
	CongestionRecord_START  CongestionRecord_EntryType = 1
	CongestionRecord_UPDATE CongestionRecord_EntryType = 2
	CongestionRecord_END    CongestionRecord_EntryType = 3
)

var CongestionRecord_EntryType_name = map[int32]string{
	1: "START",
	2: "UPDATE",
	3: "END",
}
var CongestionRecord_EntryType_value = map[string]int32{
	"START":  1,
	"UPDATE": 2,
	"END":    3,
}

func (x CongestionRecord_EntryType) Enum() *CongestionRecord_EntryType {
	p := new(CongestionRecord_EntryType)
	*p = x
	return p
}
func (x CongestionRecord_EntryType) String() string {
	return proto1.EnumName(CongestionRecord_EntryType_name, int32(x))
}
func (x *CongestionRecord_EntryType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(CongestionRecord_EntryType_value, data, "CongestionRecord_EntryType")
	if err != nil {
		return err
	}
	*x = CongestionRecord_EntryType(value)
	return nil
}
func (CongestionRecord_EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2, 0}
}

type ConfigRecord struct {
	Timestamp                   *uint64                          `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	LanzVersion                 *uint32                          `protobuf:"varint,2,req,name=lanzVersion" json:"lanzVersion,omitempty"`
	NumOfPorts                  *uint32                          `protobuf:"varint,3,req,name=numOfPorts" json:"numOfPorts,omitempty"`
	SegmentSize                 *uint32                          `protobuf:"varint,4,req,name=segmentSize" json:"segmentSize,omitempty"`
	MaxQueueSize                *uint32                          `protobuf:"varint,5,req,name=maxQueueSize" json:"maxQueueSize,omitempty"`
	PortConfigRecord            []*ConfigRecord_PortConfigRecord `protobuf:"bytes,6,rep,name=portConfigRecord" json:"portConfigRecord,omitempty"`
	GlobalUsageHighThreshold    *uint32                          `protobuf:"varint,7,opt,name=globalUsageHighThreshold" json:"globalUsageHighThreshold,omitempty"`
	GlobalUsageLowThreshold     *uint32                          `protobuf:"varint,8,opt,name=globalUsageLowThreshold" json:"globalUsageLowThreshold,omitempty"`
	GlobalUsageReportingEnabled *bool                            `protobuf:"varint,9,opt,name=globalUsageReportingEnabled" json:"globalUsageReportingEnabled,omitempty"`
	XXX_unrecognized            []byte                           `json:"-"`
}

func (m *ConfigRecord) Reset()                    { *m = ConfigRecord{} }
func (m *ConfigRecord) String() string            { return proto1.CompactTextString(m) }
func (*ConfigRecord) ProtoMessage()               {}
func (*ConfigRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConfigRecord) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ConfigRecord) GetLanzVersion() uint32 {
	if m != nil && m.LanzVersion != nil {
		return *m.LanzVersion
	}
	return 0
}

func (m *ConfigRecord) GetNumOfPorts() uint32 {
	if m != nil && m.NumOfPorts != nil {
		return *m.NumOfPorts
	}
	return 0
}

func (m *ConfigRecord) GetSegmentSize() uint32 {
	if m != nil && m.SegmentSize != nil {
		return *m.SegmentSize
	}
	return 0
}

func (m *ConfigRecord) GetMaxQueueSize() uint32 {
	if m != nil && m.MaxQueueSize != nil {
		return *m.MaxQueueSize
	}
	return 0
}

func (m *ConfigRecord) GetPortConfigRecord() []*ConfigRecord_PortConfigRecord {
	if m != nil {
		return m.PortConfigRecord
	}
	return nil
}

func (m *ConfigRecord) GetGlobalUsageHighThreshold() uint32 {
	if m != nil && m.GlobalUsageHighThreshold != nil {
		return *m.GlobalUsageHighThreshold
	}
	return 0
}

func (m *ConfigRecord) GetGlobalUsageLowThreshold() uint32 {
	if m != nil && m.GlobalUsageLowThreshold != nil {
		return *m.GlobalUsageLowThreshold
	}
	return 0
}

func (m *ConfigRecord) GetGlobalUsageReportingEnabled() bool {
	if m != nil && m.GlobalUsageReportingEnabled != nil {
		return *m.GlobalUsageReportingEnabled
	}
	return false
}

type ConfigRecord_PortConfigRecord struct {
	IntfName         *string `protobuf:"bytes,1,req,name=intfName" json:"intfName,omitempty"`
	SwitchId         *uint32 `protobuf:"varint,2,req,name=switchId" json:"switchId,omitempty"`
	PortId           *uint32 `protobuf:"varint,3,req,name=portId" json:"portId,omitempty"`
	InternalPort     *bool   `protobuf:"varint,4,req,name=internalPort" json:"internalPort,omitempty"`
	HighThreshold    *uint32 `protobuf:"varint,5,req,name=highThreshold" json:"highThreshold,omitempty"`
	LowThreshold     *uint32 `protobuf:"varint,6,req,name=lowThreshold" json:"lowThreshold,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ConfigRecord_PortConfigRecord) Reset()         { *m = ConfigRecord_PortConfigRecord{} }
func (m *ConfigRecord_PortConfigRecord) String() string { return proto1.CompactTextString(m) }
func (*ConfigRecord_PortConfigRecord) ProtoMessage()    {}
func (*ConfigRecord_PortConfigRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

func (m *ConfigRecord_PortConfigRecord) GetIntfName() string {
	if m != nil && m.IntfName != nil {
		return *m.IntfName
	}
	return ""
}

func (m *ConfigRecord_PortConfigRecord) GetSwitchId() uint32 {
	if m != nil && m.SwitchId != nil {
		return *m.SwitchId
	}
	return 0
}

func (m *ConfigRecord_PortConfigRecord) GetPortId() uint32 {
	if m != nil && m.PortId != nil {
		return *m.PortId
	}
	return 0
}

func (m *ConfigRecord_PortConfigRecord) GetInternalPort() bool {
	if m != nil && m.InternalPort != nil {
		return *m.InternalPort
	}
	return false
}

func (m *ConfigRecord_PortConfigRecord) GetHighThreshold() uint32 {
	if m != nil && m.HighThreshold != nil {
		return *m.HighThreshold
	}
	return 0
}

func (m *ConfigRecord_PortConfigRecord) GetLowThreshold() uint32 {
	if m != nil && m.LowThreshold != nil {
		return *m.LowThreshold
	}
	return 0
}

type GlobalBufferUsageRecord struct {
	EntryType        *GlobalBufferUsageRecord_EntryType `protobuf:"varint,1,opt,name=entryType,enum=LanzProtobuf.GlobalBufferUsageRecord_EntryType" json:"entryType,omitempty"`
	Timestamp        *uint64                            `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	BufferSize       *uint32                            `protobuf:"varint,3,opt,name=bufferSize" json:"bufferSize,omitempty"`
	Duration         *uint32                            `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	XXX_unrecognized []byte                             `json:"-"`
}

func (m *GlobalBufferUsageRecord) Reset()                    { *m = GlobalBufferUsageRecord{} }
func (m *GlobalBufferUsageRecord) String() string            { return proto1.CompactTextString(m) }
func (*GlobalBufferUsageRecord) ProtoMessage()               {}
func (*GlobalBufferUsageRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GlobalBufferUsageRecord) GetEntryType() GlobalBufferUsageRecord_EntryType {
	if m != nil && m.EntryType != nil {
		return *m.EntryType
	}
	return GlobalBufferUsageRecord_LOW
}

func (m *GlobalBufferUsageRecord) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *GlobalBufferUsageRecord) GetBufferSize() uint32 {
	if m != nil && m.BufferSize != nil {
		return *m.BufferSize
	}
	return 0
}

func (m *GlobalBufferUsageRecord) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

type CongestionRecord struct {
	Timestamp          *uint64                     `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	IntfName           *string                     `protobuf:"bytes,2,req,name=intfName" json:"intfName,omitempty"`
	SwitchId           *uint32                     `protobuf:"varint,3,req,name=switchId" json:"switchId,omitempty"`
	PortId             *uint32                     `protobuf:"varint,4,req,name=portId" json:"portId,omitempty"`
	QueueSize          *uint32                     `protobuf:"varint,5,req,name=queueSize" json:"queueSize,omitempty"`
	EntryType          *CongestionRecord_EntryType `protobuf:"varint,6,opt,name=entryType,enum=LanzProtobuf.CongestionRecord_EntryType" json:"entryType,omitempty"`
	TrafficClass       *uint32                     `protobuf:"varint,7,opt,name=trafficClass" json:"trafficClass,omitempty"`
	TimeOfMaxQLen      *uint64                     `protobuf:"varint,8,opt,name=timeOfMaxQLen" json:"timeOfMaxQLen,omitempty"`
	TxLatency          *uint32                     `protobuf:"varint,9,opt,name=txLatency" json:"txLatency,omitempty"`
	QDropCount         *uint32                     `protobuf:"varint,10,opt,name=qDropCount" json:"qDropCount,omitempty"`
	FabricPeerIntfName *string                     `protobuf:"bytes,11,opt,name=fabricPeerIntfName" json:"fabricPeerIntfName,omitempty"`
	XXX_unrecognized   []byte                      `json:"-"`
}

func (m *CongestionRecord) Reset()                    { *m = CongestionRecord{} }
func (m *CongestionRecord) String() string            { return proto1.CompactTextString(m) }
func (*CongestionRecord) ProtoMessage()               {}
func (*CongestionRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CongestionRecord) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CongestionRecord) GetIntfName() string {
	if m != nil && m.IntfName != nil {
		return *m.IntfName
	}
	return ""
}

func (m *CongestionRecord) GetSwitchId() uint32 {
	if m != nil && m.SwitchId != nil {
		return *m.SwitchId
	}
	return 0
}

func (m *CongestionRecord) GetPortId() uint32 {
	if m != nil && m.PortId != nil {
		return *m.PortId
	}
	return 0
}

func (m *CongestionRecord) GetQueueSize() uint32 {
	if m != nil && m.QueueSize != nil {
		return *m.QueueSize
	}
	return 0
}

func (m *CongestionRecord) GetEntryType() CongestionRecord_EntryType {
	if m != nil && m.EntryType != nil {
		return *m.EntryType
	}
	return CongestionRecord_START
}

func (m *CongestionRecord) GetTrafficClass() uint32 {
	if m != nil && m.TrafficClass != nil {
		return *m.TrafficClass
	}
	return 0
}

func (m *CongestionRecord) GetTimeOfMaxQLen() uint64 {
	if m != nil && m.TimeOfMaxQLen != nil {
		return *m.TimeOfMaxQLen
	}
	return 0
}

func (m *CongestionRecord) GetTxLatency() uint32 {
	if m != nil && m.TxLatency != nil {
		return *m.TxLatency
	}
	return 0
}

func (m *CongestionRecord) GetQDropCount() uint32 {
	if m != nil && m.QDropCount != nil {
		return *m.QDropCount
	}
	return 0
}

func (m *CongestionRecord) GetFabricPeerIntfName() string {
	if m != nil && m.FabricPeerIntfName != nil {
		return *m.FabricPeerIntfName
	}
	return ""
}

type ErrorRecord struct {
	Timestamp        *uint64 `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	ErrorMessage     *string `protobuf:"bytes,2,req,name=errorMessage" json:"errorMessage,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ErrorRecord) Reset()                    { *m = ErrorRecord{} }
func (m *ErrorRecord) String() string            { return proto1.CompactTextString(m) }
func (*ErrorRecord) ProtoMessage()               {}
func (*ErrorRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ErrorRecord) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ErrorRecord) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

type LanzRecord struct {
	ConfigRecord            *ConfigRecord            `protobuf:"bytes,1,opt,name=configRecord" json:"configRecord,omitempty"`
	CongestionRecord        *CongestionRecord        `protobuf:"bytes,2,opt,name=congestionRecord" json:"congestionRecord,omitempty"`
	ErrorRecord             *ErrorRecord             `protobuf:"bytes,3,opt,name=errorRecord" json:"errorRecord,omitempty"`
	GlobalBufferUsageRecord *GlobalBufferUsageRecord `protobuf:"bytes,4,opt,name=globalBufferUsageRecord" json:"globalBufferUsageRecord,omitempty"`
	XXX_unrecognized        []byte                   `json:"-"`
}

func (m *LanzRecord) Reset()                    { *m = LanzRecord{} }
func (m *LanzRecord) String() string            { return proto1.CompactTextString(m) }
func (*LanzRecord) ProtoMessage()               {}
func (*LanzRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LanzRecord) GetConfigRecord() *ConfigRecord {
	if m != nil {
		return m.ConfigRecord
	}
	return nil
}

func (m *LanzRecord) GetCongestionRecord() *CongestionRecord {
	if m != nil {
		return m.CongestionRecord
	}
	return nil
}

func (m *LanzRecord) GetErrorRecord() *ErrorRecord {
	if m != nil {
		return m.ErrorRecord
	}
	return nil
}

func (m *LanzRecord) GetGlobalBufferUsageRecord() *GlobalBufferUsageRecord {
	if m != nil {
		return m.GlobalBufferUsageRecord
	}
	return nil
}

func init() {
	proto1.RegisterType((*ConfigRecord)(nil), "LanzProtobuf.ConfigRecord")
	proto1.RegisterType((*ConfigRecord_PortConfigRecord)(nil), "LanzProtobuf.ConfigRecord.PortConfigRecord")
	proto1.RegisterType((*GlobalBufferUsageRecord)(nil), "LanzProtobuf.GlobalBufferUsageRecord")
	proto1.RegisterType((*CongestionRecord)(nil), "LanzProtobuf.CongestionRecord")
	proto1.RegisterType((*ErrorRecord)(nil), "LanzProtobuf.ErrorRecord")
	proto1.RegisterType((*LanzRecord)(nil), "LanzProtobuf.LanzRecord")
	proto1.RegisterEnum("LanzProtobuf.GlobalBufferUsageRecord_EntryType", GlobalBufferUsageRecord_EntryType_name, GlobalBufferUsageRecord_EntryType_value)
	proto1.RegisterEnum("LanzProtobuf.CongestionRecord_EntryType", CongestionRecord_EntryType_name, CongestionRecord_EntryType_value)
}

func init() { proto1.RegisterFile("lanz.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x55, 0xdd, 0x6e, 0xda, 0x30,
	0x14, 0x16, 0x04, 0x28, 0x39, 0xa1, 0x53, 0xe4, 0x8b, 0x35, 0xeb, 0xa6, 0x0a, 0x45, 0x9b, 0x84,
	0x56, 0x89, 0x49, 0x5c, 0x4d, 0x9b, 0x34, 0xad, 0x3f, 0xac, 0xed, 0x44, 0x0b, 0x73, 0xe9, 0x2a,
	0xed, 0x66, 0x32, 0xc1, 0x09, 0x91, 0x42, 0x42, 0x9d, 0x44, 0xfd, 0x79, 0x92, 0x3d, 0xc9, 0x5e,
	0x62, 0x37, 0x7b, 0x92, 0x3d, 0xc3, 0x6c, 0x43, 0xc1, 0x86, 0x52, 0xf5, 0x0e, 0x7f, 0xe7, 0x9c,
	0xcf, 0x3e, 0xe7, 0x3b, 0x5f, 0x00, 0x88, 0x48, 0x7c, 0xd7, 0x9c, 0xb0, 0x24, 0x4b, 0x50, 0xad,
	0xc3, 0x7f, 0xf7, 0xc4, 0xcf, 0x41, 0xee, 0xbb, 0xbf, 0xca, 0x50, 0x3b, 0x48, 0x62, 0x3f, 0x0c,
	0x30, 0xf5, 0x12, 0x36, 0x44, 0xaf, 0xc0, 0xcc, 0xc2, 0x31, 0x4d, 0x33, 0x32, 0x9e, 0x38, 0x85,
	0x7a, 0xb1, 0x51, 0xc2, 0x0b, 0x00, 0xd5, 0xc1, 0x12, 0x54, 0xdf, 0x29, 0x4b, 0xc3, 0x24, 0x76,
	0x8a, 0x3c, 0xbe, 0x89, 0x55, 0x08, 0xed, 0x00, 0xc4, 0xf9, 0xb8, 0xeb, 0xf7, 0x12, 0x96, 0xa5,
	0x8e, 0x21, 0x13, 0x14, 0x44, 0x30, 0xa4, 0x34, 0x18, 0xd3, 0x38, 0x3b, 0x0f, 0xef, 0xa8, 0x53,
	0x9a, 0x32, 0x28, 0x10, 0x72, 0xa1, 0x36, 0x26, 0x37, 0xdf, 0x72, 0x9a, 0x53, 0x99, 0x52, 0x96,
	0x29, 0x1a, 0x86, 0x2e, 0xc1, 0x9e, 0x70, 0x3a, 0xf5, 0xe5, 0x4e, 0xa5, 0x6e, 0x34, 0xac, 0xd6,
	0x6e, 0x53, 0xed, 0xaf, 0xa9, 0x66, 0x34, 0x7b, 0x4b, 0x25, 0x78, 0x85, 0x04, 0x7d, 0x00, 0x27,
	0x88, 0x92, 0x01, 0x89, 0x2e, 0x52, 0x12, 0xd0, 0xe3, 0x30, 0x18, 0xf5, 0x47, 0x8c, 0xa6, 0xa3,
	0x24, 0x1a, 0x3a, 0x1b, 0xf5, 0x02, 0x7f, 0xc8, 0xda, 0x38, 0x7a, 0x0f, 0x5b, 0x4a, 0xac, 0x93,
	0x5c, 0x2f, 0x4a, 0xab, 0xb2, 0x74, 0x5d, 0x18, 0x7d, 0x86, 0x97, 0x4a, 0x08, 0x53, 0xf1, 0xac,
	0x30, 0x0e, 0xda, 0x31, 0x19, 0x44, 0x74, 0xe8, 0x98, 0xbc, 0xba, 0x8a, 0x1f, 0x4b, 0xd9, 0xfe,
	0x5b, 0x00, 0x7b, 0xb9, 0x3d, 0xb4, 0x0d, 0xd5, 0x30, 0xce, 0xfc, 0x33, 0x32, 0xa6, 0x52, 0x4a,
	0x13, 0xcf, 0xcf, 0x22, 0x96, 0x5e, 0x87, 0x99, 0x37, 0x3a, 0x19, 0xce, 0x64, 0x9c, 0x9f, 0xd1,
	0x73, 0xa8, 0x08, 0x7a, 0x1e, 0x99, 0xea, 0x37, 0x3b, 0x09, 0x65, 0x78, 0x3d, 0x65, 0x31, 0x89,
	0xc4, 0x5d, 0x52, 0xbc, 0x2a, 0xd6, 0x30, 0xf4, 0x1a, 0x36, 0x47, 0xda, 0xd4, 0xa6, 0xf2, 0xe9,
	0xa0, 0x60, 0x8a, 0xd4, 0xf9, 0x54, 0xa6, 0x1a, 0xab, 0x98, 0xfb, 0xaf, 0x00, 0x5b, 0x47, 0xb2,
	0xe5, 0xfd, 0xdc, 0xf7, 0x29, 0x9b, 0x35, 0x2e, 0x3b, 0x3b, 0x05, 0x93, 0xaf, 0x0b, 0xbb, 0xed,
	0xdf, 0x4e, 0x44, 0x6b, 0x85, 0xc6, 0xb3, 0xd6, 0x3b, 0x5d, 0xf8, 0x35, 0x95, 0xcd, 0xf6, 0x7d,
	0x19, 0x5e, 0x30, 0xe8, 0x4b, 0x5f, 0xe4, 0x74, 0xda, 0xd2, 0xf3, 0x95, 0x1e, 0x48, 0x1e, 0xb9,
	0x8e, 0x86, 0x94, 0x52, 0x41, 0xc4, 0x28, 0x87, 0x39, 0x23, 0x99, 0x70, 0x44, 0x49, 0x46, 0xe7,
	0x67, 0xf7, 0x2d, 0x98, 0xf3, 0x1b, 0xd1, 0x06, 0x18, 0x9d, 0xee, 0xa5, 0x5d, 0x40, 0x00, 0x95,
	0x8b, 0xde, 0xe1, 0x5e, 0xbf, 0x6d, 0x17, 0x51, 0x15, 0x4a, 0xc7, 0x27, 0x47, 0xc7, 0xb6, 0xe1,
	0xfe, 0x31, 0xc0, 0xe6, 0xfa, 0x05, 0xfc, 0x5a, 0x5e, 0xfa, 0x24, 0x3f, 0xaa, 0x0a, 0x17, 0x1f,
	0x51, 0xd8, 0x58, 0xab, 0x70, 0x49, 0x53, 0x98, 0xdf, 0x76, 0xb5, 0x64, 0xbc, 0x05, 0x80, 0xbe,
	0xa8, 0x53, 0xaf, 0xc8, 0xa9, 0x37, 0x56, 0xec, 0xa6, 0x3d, 0xff, 0xe1, 0x71, 0x73, 0xf5, 0x33,
	0x46, 0x7c, 0x3f, 0xf4, 0x0e, 0x22, 0x92, 0xa6, 0x33, 0x63, 0x69, 0x98, 0xd8, 0x23, 0xd1, 0x66,
	0xd7, 0x3f, 0xe5, 0xbe, 0xef, 0xd0, 0x58, 0x5a, 0xa8, 0x84, 0x75, 0x50, 0x4e, 0xe7, 0xa6, 0x43,
	0x32, 0x1a, 0x7b, 0xb7, 0xd2, 0x26, 0xfc, 0xbd, 0x73, 0x40, 0x08, 0x77, 0x75, 0xc8, 0x92, 0xc9,
	0x41, 0x92, 0xc7, 0x99, 0x03, 0x53, 0xe1, 0x16, 0x08, 0x6a, 0x02, 0xf2, 0xc9, 0x80, 0x85, 0x5e,
	0x8f, 0x52, 0x76, 0x72, 0x3f, 0x47, 0x8b, 0xe7, 0x99, 0xf8, 0x81, 0x88, 0xbb, 0xab, 0x8a, 0x69,
	0x42, 0xf9, 0xbc, 0xbf, 0x87, 0xfb, 0x4b, 0x72, 0x72, 0x8d, 0xdb, 0x67, 0x87, 0x5c, 0xcd, 0x2e,
	0x58, 0x6d, 0xc6, 0x12, 0xf6, 0x24, 0x1d, 0xf9, 0x44, 0xa8, 0x48, 0x3e, 0xa5, 0xa9, 0xd8, 0xd5,
	0x99, 0x96, 0x1a, 0xe6, 0xfe, 0x2e, 0x02, 0x88, 0x61, 0xcf, 0x08, 0x3f, 0x41, 0xcd, 0x53, 0x3f,
	0x7f, 0xc2, 0x05, 0x56, 0x6b, 0x7b, 0xfd, 0xe7, 0x0f, 0x6b, 0xf9, 0xe8, 0x2b, 0xd8, 0xde, 0x92,
	0x5a, 0x72, 0xf5, 0xad, 0xd6, 0xce, 0xe3, 0x9a, 0xe2, 0x95, 0x3a, 0xf4, 0x11, 0x2c, 0xba, 0xe8,
	0x55, 0x5a, 0xc4, 0x6a, 0xbd, 0xd0, 0x69, 0x94, 0x61, 0x60, 0x35, 0x1b, 0xfd, 0xbc, 0xff, 0x6c,
	0xae, 0x98, 0x55, 0xba, 0xc9, 0x6a, 0xbd, 0x79, 0x92, 0xb3, 0xf1, 0x3a, 0x96, 0xfd, 0x8d, 0x1f,
	0x65, 0xf9, 0xd7, 0xf7, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xcf, 0xcf, 0x51, 0x07, 0x07, 0x00,
	0x00,
}
